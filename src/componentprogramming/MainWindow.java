/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainWindow.java
 *
 * Created on May 26, 2012, 5:09:47 PM
 */
package componentprogramming;

import componentprogramming.CompoLexical.*;
import componentprogramming.CompoParser.*;
import componentprogramming.Utils.*;
import java.util.Vector;

/**
 *
 * @author mhdsyrwan
 */
public class MainWindow extends javax.swing.JFrame {

    /** Creates new form MainWindow */
    public MainWindow() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        codeText = new javax.swing.JTextArea();
        resultLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        codeText.setColumns(20);
        codeText.setRows(5);
        codeText.setName("codeText"); // NOI18N
        codeText.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                codeTextCaretUpdate(evt);
            }
        });
        codeText.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                codeTextInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        codeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codeTextKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(codeText);

        resultLabel.setText("no result yet");
        resultLabel.setName("resultLabel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(resultLabel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultLabel)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    Integer i = 0;
private void codeTextInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_codeTextInputMethodTextChanged
// TODO add your handling code here:
}//GEN-LAST:event_codeTextInputMethodTextChanged

    private static Vector<Identifier> _s(String s1, String s2) {
        return _s(new Identifier(s1), new Identifier(s2));
    }

    private static Vector<Identifier> _s(String s1, Identifier t2) {
        return _s(new Identifier(s1), t2);
    }

    private static Vector<Identifier> _s(Identifier t1, String s2) {
        return _s(t1, new Identifier(s2));
    }

    private static Vector<Identifier> _s(Identifier t1, Identifier t2) {
        Vector<Identifier> hash = new Vector<Identifier>();
        if (!t1.toString().equals("")) {
            hash.add(t1);
        }
        if (!t2.toString().equals("")) {
            hash.add(t2);
        }
        return hash;
    }

    private static Identifier _t(String s) {
        return new Identifier(new Token(s));
    }

    private static Identifier _t(typeToken t) {
        return new Identifier(new Token(t));
    }

    private static Vector<Identifier> _st(typeToken t) {
        return _s(_t(t), "");
    }

private void codeTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codeTextKeyTyped
    
    
//    Character c = new Character(evt.getKeyChar());
//    String code = codeText.getText().concat(c.toString());
   
}//GEN-LAST:event_codeTextKeyTyped

private void codeTextCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_codeTextCaretUpdate
// TODO add your handling code here:
    String code;
    code = codeText.getText();
    System.out.println(code);
    if (codeText.getText().equals("")) {
        return;
    }
    
    
    RulesSet rules = new RulesSet();
    rules.addRule("S", _s("S", "S5"), _s("S1", "S2"));
    rules.addRule("S5", _s("AMP", "S"));
    rules.addRule("S", _s("S", "S"), _s("S4", "CAB"));
    rules.addRule("S4", _s("OAB", "S"));
    rules.addRule("S5", _s("AMP", "S"));
    rules.addRule("S1", _s("OB", "N"));
    rules.addRule("S2", _s("COM", "S3"));
    rules.addRule("S3", _s("N", "CB"));
    rules.addRule("OB", _st(typeToken.openTok_brace));
    rules.addRule("CB", _st(typeToken.closeTok_brace));
    rules.addRule("COM", _st(typeToken.comma));
    rules.addRule("N", _st(typeToken.Num));
    rules.addRule("AMP", _st(typeToken.ParallelSign));
    rules.addRule("CAB", _st(typeToken.closeBrace));
    rules.addRule("OAB", _st(typeToken.openBrace));
    CompoParser cp = new CompoParser(rules);
    CompoParser.Comp res_comp = cp.getOverallComp(code);
    try {
        if (res_comp != null) {
            resultLabel.setText(String.format("valid, overall component is %s .", res_comp.toString()));
        } else {
            resultLabel.setText("not valid.");
        }
    } catch (RuntimeException e) {
        resultLabel.setText(e.toString());
    }
}//GEN-LAST:event_codeTextCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea codeText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel resultLabel;
    // End of variables declaration//GEN-END:variables
}
